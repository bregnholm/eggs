{"version":3,"sources":["Eggs/Goals.js","Eggs/index.js","Walks/Goals.js","Walks/index.js","Home/index.js","App.js","serviceWorker.js","index.js"],"names":["Goals","milliseconds","this","missingChickens","chickensHatchingPerMinte","daysUntilFinished","Math","floor","hoursUntilFinished","minutesUntilFinished","props","endGoal","currentChickens","chickensPerMinute","habitats","timeUntilDone","missingChicken","className","toLocaleString","React","Component","Eggs","inputField","e","setState","target","name","round","value","localStorage","setItem","state","nextProps","i","length","currentKey","key","includes","split","pop","getItem","onChange","type","pattern","meters","walk","date","walks","curr","find","push","JSON","stringify","update","fullwalks","walksfull","fromMoment","daysPassed","currentAverage","makeDay","clone","day","momentDay","format","auto","add","dayOfWalk","map","style","fontStyle","moment","daysthisYear","diff","parse","open","Walks","goalsOpen","walkedSoFar","reduce","prev","walkedInTotalIfKept","iHaveWalked","totalKm","youNeed","shouldHaveBeen","percentageTotal","percentageAvr","reached","Button","onClick","variant","Carousel","controls","Item","Caption","toFixed","ProgressBar","now","Home","App","basename","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ab7d0eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\n\r\nclass Goals extends React.Component {\r\n    timeUntilDone() {\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    const milliseconds = (this.missingChickens() / this.chickensHatchingPerMinte()) * (1000 * 60);\r\n    const daysUntilFinished = Math.floor(milliseconds / (1000 * 60 * 60 * 24));\r\n    const hoursUntilFinished = Math.floor(milliseconds % oneDay / (1000 * 60 * 60));\r\n    const minutesUntilFinished = Math.floor(milliseconds % (1000 * 60 * 60) / (1000 * 60));\r\n\r\n    return {\r\n      daysUntilFinished,\r\n      hoursUntilFinished, \r\n      minutesUntilFinished\r\n    }\r\n  }\r\n\r\n  missingChickens(props) {\r\n    return (this.props.endGoal - this.props.currentChickens);\r\n  } \r\n\r\n  chickensHatchingPerMinte() {\r\n    return (this.props.chickensPerMinute * this.props.habitats);\r\n  }\r\n\r\n  render() {\r\n    const {daysUntilFinished, hoursUntilFinished, minutesUntilFinished} = this.timeUntilDone();\r\n    const missingChicken = this.missingChickens()\r\n    return (\r\n          <div className=\"goals\">\r\n            <h3>Chickens remaining</h3>\r\n            <h1>{missingChicken.toLocaleString()}</h1>\r\n            <h3>Goal reached in</h3>\r\n            <h2>\r\n              <span>{daysUntilFinished}</span> days, <span>{hoursUntilFinished}</span> hours and <span>{minutesUntilFinished}</span> minutes</h2>\r\n          </div>\r\n    );\r\n  }\r\n}\r\nexport default Goals;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport Goals from './Goals';\r\n\r\nclass Eggs extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      endGoal: 0, \r\n      currentChickens: 0,\r\n      chickensPerMinute: 0,\r\n      habitats: 4\r\n    }\r\n  }\r\n\r\n  componentDidMount(nextProps) {\r\n    for(var i =0; i < localStorage.length; i++){\r\n      const currentKey = localStorage.key(i);\r\n      if(currentKey.includes('eggs.')) {\r\n        this.setState({[currentKey.split('eggs.').pop()]: localStorage.getItem(currentKey)});\r\n      }\r\n    }\r\n  }\r\n  inputField = (e) => {\r\n    this.setState({[e.target.name]: Math.round(e.target.value)});\r\n    localStorage.setItem(`eggs.${e.target.name}`, e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <header className=\"eggs\">Eggs Inc. calculator</header>\r\n        <main>\r\n          <Goals {...this.state}></Goals>\r\n          <div className=\"list\">\r\n            <span>Chicken goal:</span>\r\n            <input name=\"endGoal\" onChange={this.inputField} value={this.state.endGoal} type=\"number\" pattern=\"[0-9]*\" />\r\n          </div>\r\n          <div className=\"list\">\r\n            <span>Current:</span>\r\n            <input name=\"currentChickens\" onChange={this.inputField} value={this.state.currentChickens} type=\"number\" pattern=\"[0-9]*\" />\r\n          </div>\r\n          <div className=\"list\">\r\n            <span>Hatch pr. min</span>\r\n            <input name=\"chickensPerMinute\" onChange={this.inputField} value={this.state.chickensPerMinute} type=\"number\" pattern=\"[0-9]*\" />\r\n          </div>\r\n          <div className=\"list\">\r\n            <span>Habitats</span>\r\n            <input name=\"habitats\" onChange={this.inputField} value={this.state.habitats} type=\"number\" pattern=\"[0-9]*\" />\r\n          </div>\r\n        </main>\r\n        </>\r\n    );\r\n  }\r\n}\r\nexport default Eggs;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport moment from 'moment';\r\n\r\nclass Goals extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    const fromMoment = moment([2020, 0]);\r\n    const daysthisYear = moment([2021, 0]).diff(fromMoment, 'days');\r\n    const daysPassed = moment().diff(fromMoment, 'days');\r\n\r\n    this.state = {\r\n      endGoal: 3000, \r\n      currentAverage: 2400,\r\n      daysthisYear,\r\n      daysPassed, fromMoment, walks: []\r\n    }\r\n  }\r\n\r\n  inputField = (e) => {\r\n    const meters = Math.round(e.target.value);\r\n\r\n    switch (e.target.name) {\r\n      case 'endGoal':\r\n      case 'currentAverage':\r\n        this.setState({[e.target.name]: meters});\r\n        localStorage.setItem(`walkative.${e.target.name}`, meters);\r\n        break;\r\n      default:\r\n        const date = e.target.name;\r\n        const walk = {date, meters};\r\n        \r\n        const { walks } = this.state;\r\n        const curr = walks.find(({date}) => walk.date === date);\r\n        if (curr) {\r\n          curr.meters = walk.meters;\r\n        } else {\r\n          walks.push(walk);\r\n    \r\n        }\r\n    \r\n        this.setState({walks});\r\n        localStorage.setItem(`walkative.walks`, JSON.stringify(walks));\r\n        break;\r\n    }\r\n    this.props.update();\r\n  }\r\n\r\n  componentDidMount(nextProps) {\r\n    for(var i =0; i < localStorage.length; i++){\r\n      const currentKey = localStorage.key(i);\r\n      if(currentKey.includes('walkative.')) {\r\n        this.setState({[currentKey.split('walkative.').pop()]: JSON.parse(localStorage.getItem(currentKey))});\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n fullwalks = () => {\r\n    const walksfull = [];\r\n\r\n    const { fromMoment, daysPassed, currentAverage, walks = [] } = this.state;\r\n    const makeDay = fromMoment.clone();\r\n\r\n    for (let day = 0; day < daysPassed; day++) {\r\n        const momentDay = makeDay.format('Y-MM-DD');\r\n        const curr = walks.find(({date}) => momentDay === date);\r\n        const push = { date: momentDay, meters: curr ? curr.meters : currentAverage, auto: !curr}\r\n        walksfull.push(push);\r\n        makeDay.add(1, 'd');\r\n    }\r\n\r\n    return walksfull;\r\n}\r\n\r\ndayOfWalk = () => {\r\n  const walks = this.fullwalks();\r\n  return walks.map(walk =>(\r\n    <div className=\"dayofWalk\" style={{fontStyle: walk.auto ? 'italic' : ''}}> \r\n      <span>{walk.date}</span>\r\n      <input name={walk.date} onChange={this.inputField} value={walk.meters} type=\"number\" pattern=\"[0-9]*\" />\r\n    </div>\r\n  ));\r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className={`goals ${this.props.open ? 'open': ''}`}>\r\n          <div>\r\n            <span>Meters per day</span>\r\n            <input name={'endGoal'} onChange={this.inputField} value={this.state.endGoal} type=\"number\" pattern=\"[0-9]*\" />\r\n          </div>\r\n          <div>\r\n            <span>Default average</span>\r\n            <input name={'currentAverage'} onChange={this.inputField} value={this.state.currentAverage} type=\"number\" pattern=\"[0-9]*\" />\r\n          </div>\r\n          <hr></hr>\r\n          {this.dayOfWalk()}\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default Goals;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\nimport moment from 'moment';\r\nimport \"holderjs\";\r\nimport Goals from './Goals';\r\n\r\nclass Walks extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    const fromMoment = moment([2020, 0]);\r\n    const daysthisYear = moment([2021, 0]).diff(fromMoment, 'days');\r\n    const daysPassed = moment().diff(fromMoment, 'days');\r\n    \r\n    this.state = {\r\n      endGoal: 3000, \r\n      currentAverage: 2400,\r\n      daysthisYear,\r\n      daysPassed,\r\n      goalsOpen: false, walks: [], fromMoment\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount(nextProps) {\r\n    this.update();\r\n  }\r\n\r\n  goalsOpen = () => {\r\n    this.setState({ goalsOpen: !this.state.goalsOpen })\r\n  }\r\n\r\n\r\n  fullwalks = () => {\r\n    const walksfull = [];\r\n\r\n    const { fromMoment, daysPassed, currentAverage, walks = [] } = this.state;\r\n    const makeDay = fromMoment.clone();\r\n\r\n    for (let day = 0; day < daysPassed; day++) {\r\n        const momentDay = makeDay.format('Y-MM-DD');\r\n        const curr = walks.find(({date}) => momentDay === date);\r\n        const push = { date: momentDay, meters: curr ? curr.meters : currentAverage, auto: !curr}\r\n        walksfull.push(push);\r\n        makeDay.add(1, 'd');\r\n    }\r\n\r\n    return walksfull;\r\n}\r\n\r\n\r\n  update = () => {\r\n    for(var i =0; i < localStorage.length; i++){\r\n      const currentKey = localStorage.key(i);\r\n      if(currentKey.includes('walkative.')) {\r\n        this.setState({[currentKey.split('walkative.').pop()]: JSON.parse(localStorage.getItem(currentKey))});\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const walkedSoFar = this.fullwalks().reduce((prev, curr) => (prev.meters || prev) + curr.meters);\r\n    \r\n    const {daysPassed, endGoal, daysthisYear, goalsOpen} = this.state;\r\n\r\n    const currentAverage = ((walkedSoFar) / (daysPassed)) / 1000;\r\n    const walkedInTotalIfKept = ((currentAverage * (daysthisYear - daysPassed)) + walkedSoFar) / 1000;\r\n\r\n    const iHaveWalked = (currentAverage * daysPassed) / 1000;\r\n    const totalKm = (endGoal * daysthisYear) / 1000;\r\n    const youNeed = (totalKm - iHaveWalked) / (daysthisYear - daysPassed);\r\n    const shouldHaveBeen = endGoal / 1000 * daysPassed;\r\n    const percentageTotal = iHaveWalked / totalKm * 100;\r\n    const percentageAvr = currentAverage / endGoal * 100;\r\n    const reached = iHaveWalked < shouldHaveBeen;\r\n\r\n    return (\r\n      <>\r\n      <header className=\"walks\">\r\n        Walk Motivator\r\n        <Button onClick={this.goalsOpen} variant=\"success\">{goalsOpen ? '-' : '+'}</Button>\r\n        </header>\r\n\r\n        <main>\r\n          <Goals open={goalsOpen} update={this.update}/>\r\n          <Carousel controls=\"false\">\r\n            <Carousel.Item>\r\n              <div className=\"box\">\r\n                <Carousel.Caption>\r\n                  <h2>You have walked <span className={reached && 'notReached'}>{walkedSoFar / 1000} km</span> this year</h2>\r\n                  <h4>The goal is <span>{shouldHaveBeen} km</span></h4>\r\n                  <h2>That would be <span className={reached && 'notReached'}>{walkedInTotalIfKept.toFixed(2)} km</span> in a year</h2>\r\n                  <h4>Walk <span>{totalKm} km</span> this year!</h4>\r\n                  <h2>You still need to walk <span  className={totalKm < iHaveWalked && 'notReached'}>{(totalKm - iHaveWalked).toFixed(2)}km</span> this year</h2>\r\n                  <ProgressBar variant='success' now={percentageTotal} />\r\n                </Carousel.Caption>\r\n              </div>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <div className=\"box\">\r\n                <Carousel.Caption>\r\n                  <h2>The current average is <span className={reached && 'notReached'}>{currentAverage.toFixed(2)} km</span> per day</h2>\r\n                  <h4>The goal is <span>{endGoal / 1000} km</span> per day</h4>\r\n\r\n                  <h2>Want to succeed?</h2>\r\n                  <h4>Start walking <span>{youNeed.toFixed(2)} km</span> everyday</h4>\r\n\r\n                  <h2>You are so close!</h2>\r\n                  <ProgressBar variant='success' now={percentageAvr} />\r\n\r\n                </Carousel.Caption>\r\n              </div>\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </main>\r\n        </>\r\n    );\r\n  }\r\n}\r\nexport default Walks;","import React from \"react\";\r\n\r\n\r\nexport default function Home() {\r\n    return (\r\n    <main>\r\n        <h2>Home</h2>\r\n    </main>\r\n    );\r\n}","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Eggs from \"./Eggs\";\r\nimport Walks from \"./Walks\";\r\nimport './App.css';\r\nimport Home from \"./Home\";\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router basename=\"/\">\r\n      <div className=\"App\">\r\n        <Navbar expand=\"lg\" variant=\"dark\">\r\n          <Navbar.Brand href=\"#\">Peters Stuff</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#eggs\">Eggs</Nav.Link>\r\n                    <Nav.Link href=\"#walks\">Walks</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        <Switch>\r\n            <Route path=\"/eggs\">\r\n                <Eggs />\r\n            </Route>\r\n            <Route path=\"/walks\">\r\n                <Walks />\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Home />\r\n            </Route>\r\n        </Switch>\r\n        <footer></footer>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}