{"version":3,"sources":["Eggs/Goals.js","Eggs/index.js","Walks/Goals.js","Walks/index.js","Home/index.js","serviceWorker.js","index.js","App.js"],"names":["Goals","milliseconds","this","missingChickens","chickensHatchingPerMinte","daysUntilFinished","Math","floor","hoursUntilFinished","minutesUntilFinished","props","endGoal","currentChickens","chickensPerMinute","habitats","timeUntilDone","missingChicken","className","toLocaleString","React","Component","Eggs","inputField","e","setState","target","name","round","value","localStorage","setItem","state","nextProps","i","length","currentKey","key","includes","split","pop","getItem","onChange","type","pattern","meters","walk","date","walks","curr","find","push","JSON","stringify","update","fullwalks","walksfull","fromMoment","daysPassed","currentAverage","makeDay","clone","day","momentDay","format","auto","add","dayOfWalk","map","style","fontStyle","moment","daysthisYear","diff","parse","open","Walks","goalsOpen","iHaveWalked","totalKm","youNeed","prospectedWalk","shouldHaveBeen","percentageTotal","percentageAvr","reached","Button","onClick","variant","Carousel","controls","Item","Caption","ProgressBar","now","toFixed","Home","Boolean","window","location","hostname","match","ReactDOM","render","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad5d5362.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nclass Goals extends React.Component {\n    timeUntilDone() {\n    const oneDay = 1000 * 60 * 60 * 24;\n    const milliseconds = (this.missingChickens() / this.chickensHatchingPerMinte()) * (1000 * 60);\n    const daysUntilFinished = Math.floor(milliseconds / (1000 * 60 * 60 * 24));\n    const hoursUntilFinished = Math.floor(milliseconds % oneDay / (1000 * 60 * 60));\n    const minutesUntilFinished = Math.floor(milliseconds % (1000 * 60 * 60) / (1000 * 60));\n\n    return {\n      daysUntilFinished,\n      hoursUntilFinished, \n      minutesUntilFinished\n    }\n  }\n\n  missingChickens(props) {\n    return (this.props.endGoal - this.props.currentChickens);\n  } \n\n  chickensHatchingPerMinte() {\n    return (this.props.chickensPerMinute * this.props.habitats);\n  }\n\n  render() {\n    const {daysUntilFinished, hoursUntilFinished, minutesUntilFinished} = this.timeUntilDone();\n    const missingChicken = this.missingChickens()\n    return (\n          <div className=\"goals\">\n            <h3>Chickens remaining</h3>\n            <h1>{missingChicken.toLocaleString()}</h1>\n            <h3>Goal reached in</h3>\n            <h2>\n              <span>{daysUntilFinished}</span> days, <span>{hoursUntilFinished}</span> hours and <span>{minutesUntilFinished}</span> minutes</h2>\n          </div>\n    );\n  }\n}\nexport default Goals;\n","import React from 'react';\nimport './index.css';\nimport Goals from './Goals';\n\nclass Eggs extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      endGoal: 0, \n      currentChickens: 0,\n      chickensPerMinute: 0,\n      habitats: 4\n    }\n  }\n\n  componentDidMount(nextProps) {\n    for(var i =0; i < localStorage.length; i++){\n      const currentKey = localStorage.key(i);\n      if(currentKey.includes('eggs.')) {\n        this.setState({[currentKey.split('eggs.').pop()]: localStorage.getItem(currentKey)});\n      }\n    }\n  }\n  inputField = (e) => {\n    this.setState({[e.target.name]: Math.round(e.target.value)});\n    localStorage.setItem(`eggs.${e.target.name}`, e.target.value);\n  }\n\n  render() {\n    return (\n      <>\n      <header className=\"eggs\">Eggs Inc. calculator</header>\n        <main>\n          <Goals {...this.state}></Goals>\n          <div className=\"list\">\n            <span>Chicken goal:</span>\n            <input name=\"endGoal\" onChange={this.inputField} value={this.state.endGoal} type=\"number\" pattern=\"[0-9]*\" />\n          </div>\n          <div className=\"list\">\n            <span>Current:</span>\n            <input name=\"currentChickens\" onChange={this.inputField} value={this.state.currentChickens} type=\"number\" pattern=\"[0-9]*\" />\n          </div>\n          <div className=\"list\">\n            <span>Hatch pr. min</span>\n            <input name=\"chickensPerMinute\" onChange={this.inputField} value={this.state.chickensPerMinute} type=\"number\" pattern=\"[0-9]*\" />\n          </div>\n          <div className=\"list\">\n            <span>Habitats</span>\n            <input name=\"habitats\" onChange={this.inputField} value={this.state.habitats} type=\"number\" pattern=\"[0-9]*\" />\n          </div>\n        </main>\n        </>\n    );\n  }\n}\nexport default Eggs;\n","import React from 'react';\nimport './index.css';\nimport moment from 'moment';\n\nclass Goals extends React.Component {\n  constructor(props){\n    super(props);\n\n    const fromMoment = moment([2020, 0]);\n    const daysthisYear = moment([2021, 0]).diff(fromMoment, 'days');\n    const daysPassed = moment().diff(fromMoment, 'days');\n\n    this.state = {\n      endGoal: 3000, \n      currentAverage: 2400,\n      daysthisYear,\n      daysPassed, fromMoment, walks: []\n    }\n  }\n\n  inputField = (e) => {\n    const meters = Math.round(e.target.value);\n\n    switch (e.target.name) {\n      case 'endGoal':\n      case 'currentAverage':\n        this.setState({[e.target.name]: meters});\n        localStorage.setItem(`walkative.${e.target.name}`, meters);\n        break;\n      default:\n        const date = e.target.name;\n        const walk = {date, meters};\n        \n        const { walks } = this.state;\n        const curr = walks.find(({date}) => walk.date === date);\n        if (curr) {\n          curr.meters = walk.meters;\n        } else {\n          walks.push(walk);\n    \n        }\n    \n        this.setState({walks});\n        localStorage.setItem(`walkative.walks`, JSON.stringify(walks));\n        break;\n    }\n    this.props.update();\n  }\n\n  componentDidMount(nextProps) {\n    for(var i =0; i < localStorage.length; i++){\n      const currentKey = localStorage.key(i);\n      if(currentKey.includes('walkative.')) {\n        this.setState({[currentKey.split('walkative.').pop()]: JSON.parse(localStorage.getItem(currentKey))});\n      }\n\n    }\n  }\n\n fullwalks = () => {\n    const walksfull = [];\n\n    const { fromMoment, daysPassed, currentAverage, walks = [] } = this.state;\n    const makeDay = fromMoment.clone();\n\n    for (let day = 0; day < daysPassed; day++) {\n        const momentDay = makeDay.format('Y-MM-DD');\n        const curr = walks.find(({date}) => momentDay === date);\n        const push = { date: momentDay, meters: curr ? curr.meters : currentAverage, auto: !curr}\n        walksfull.push(push);\n        makeDay.add(1, 'd');\n    }\n\n    return walksfull;\n}\n\ndayOfWalk = () => {\n  const walks = this.fullwalks();\n  return walks.map(walk =>(\n    <div className=\"dayofWalk\" style={{fontStyle: walk.auto ? 'italic' : ''}}> \n      <span>{walk.date}</span>\n      <input name={walk.date} onChange={this.inputField} value={walk.meters} type=\"number\" pattern=\"[0-9]*\" />\n    </div>\n  ));\n}\n\n\n  render() {\n    return (\n        <div className={`goals ${this.props.open ? 'open': ''}`}>\n          <div>\n            <span>Meters per day</span>\n            <input name={'endGoal'} onChange={this.inputField} value={this.state.endGoal} type=\"number\" pattern=\"[0-9]*\" />\n          </div>\n          <div>\n            <span>Default average</span>\n            <input name={'currentAverage'} onChange={this.inputField} value={this.state.currentAverage} type=\"number\" pattern=\"[0-9]*\" />\n          </div>\n          <hr></hr>\n          {this.dayOfWalk()}\n        </div>\n    );\n  }\n}\nexport default Goals;\n","import React from 'react';\nimport './index.css';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Button from 'react-bootstrap/Button';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nimport moment from 'moment';\nimport \"holderjs\";\nimport Goals from './Goals';\n\nclass Walks extends React.Component {\n  constructor(props){\n    super(props);\n\n    const fromMoment = moment([2020, 0]);\n    const daysthisYear = moment([2021, 0]).diff(fromMoment, 'days');\n    const daysPassed = moment().diff(fromMoment, 'days');\n    \n    this.state = {\n      endGoal: 3000, \n      currentAverage: 2400,\n      daysthisYear,\n      daysPassed,\n      goalsOpen: false\n    }\n  }\n\n\n  componentDidMount(nextProps) {\n    this.update();\n  }\n\n  goalsOpen = () => {\n    this.setState({ goalsOpen: !this.state.goalsOpen })\n  }\n\n  update = () => {\n    for(var i =0; i < localStorage.length; i++){\n      const currentKey = localStorage.key(i);\n      if(currentKey.includes('walkative.')) {\n        this.setState({[currentKey.split('walkative.').pop()]: JSON.parse(localStorage.getItem(currentKey))});\n      }\n    }\n  }\n\n  render() {\n    const {currentAverage, daysPassed, endGoal, daysthisYear, goalsOpen} = this.state;\n    const iHaveWalked = (currentAverage * daysPassed) / 1000;\n    const totalKm = (endGoal * daysthisYear) / 1000;\n    const youNeed = (totalKm - iHaveWalked) / (daysthisYear - daysPassed);\n    const prospectedWalk = currentAverage / 1000 * daysthisYear;\n    const shouldHaveBeen = endGoal / 1000 * daysPassed;\n    const percentageTotal = iHaveWalked / totalKm * 100;\n    const percentageAvr = currentAverage / endGoal * 100;\n    const reached = iHaveWalked < shouldHaveBeen;\n\n    return (\n      <>\n      <header className=\"walks\">\n        Walk Motivator\n        <Button onClick={this.goalsOpen} variant=\"success\">{goalsOpen ? '-' : '+'}</Button>\n        </header>\n\n        <main>\n          <Goals open={goalsOpen} update={this.update}/>\n          <Carousel controls=\"false\">\n            <Carousel.Item>\n              <div className=\"box\">\n                <Carousel.Caption>\n                  <h2>You have walked <span className={reached && 'notReached'}>{iHaveWalked} km</span> this year</h2>\n                  <h4>The goal is <span>{shouldHaveBeen} km</span></h4>\n                  <h2>That would be <span className={reached && 'notReached'}>{prospectedWalk} km</span> in a year</h2>\n                  <h4>Walk <span>{totalKm} km</span> this year!</h4>\n                  <h2>You still need to walk <span  className={totalKm < iHaveWalked && 'notReached'}>{totalKm - iHaveWalked}km</span> this year</h2>\n                  <ProgressBar variant='success' now={percentageTotal} />\n                </Carousel.Caption>\n              </div>\n            </Carousel.Item>\n            <Carousel.Item>\n              <div className=\"box\">\n                <Carousel.Caption>\n                  <h2>The current average is <span className={reached && 'notReached'}>{currentAverage / 1000} km</span> per day</h2>\n                  <h4>The goal is <span>{endGoal / 1000} km</span> per day</h4>\n\n                  <h2>Want to succeed?</h2>\n                  <h4>Start walking <span>{youNeed.toFixed(2)} km</span> everyday</h4>\n\n                  <h2>You are so close!</h2>\n                  <ProgressBar variant='success' now={percentageAvr} />\n\n                </Carousel.Caption>\n              </div>\n            </Carousel.Item>\n          </Carousel>\n        </main>\n        </>\n    );\n  }\n}\nexport default Walks;","import React from \"react\";\n\n\nexport default function Home() {\n    return (\n    <main>\n        <h2>Home</h2>\n    </main>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Eggs from \"./Eggs\";\nimport Walks from \"./Walks\";\nimport './App.css';\nimport Home from \"./Home\";\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar expand=\"lg\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">Peters Stuff</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                    <Nav.Link href=\"/eggs\">Eggs</Nav.Link>\n                    <Nav.Link href=\"/walks\">Walks</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n\n        <Switch>\n            <Route path=\"/eggs\">\n                <Eggs />\n            </Route>\n            <Route path=\"/walks\">\n                <Walks />\n            </Route>\n            <Route path=\"/\">\n                <Home />\n            </Route>\n        </Switch>\n        <footer></footer>\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}